Resources:
  Users:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: s-org-users
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: IdIndex
          KeySchema:
          - AttributeName: id
            AttributeType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: ${self:custom.tableThroughput}
            WriteCapacityUnits: ${self:custom.tableThroughput}
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  Grades:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: s-org-grades
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeName: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  Schedules:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: s-org-schedules
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: day
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: day
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}